\name{XMFAFile-class}
\docType{class}

%% Classes:
\alias{class:XMFAFile}
\alias{XMFAFile-class}

%% Constructor:
\alias{XMFAFile}

%% Methods:
\alias{import,XMFAFile,ANY,ANY-method}

\title{XMFAFile objects}

\description{
  Imports the (non-standard) XMFA format generated by the Mauve aligner.
}

\usage{
\S4method{import}{XMFAFile,ANY,ANY}(con, format, text)
}

\arguments{
  \item{con}{A path, URL, connection or \code{XMFAFile} object
    (constructed by calling \code{XMFAFile(path)}).  If \code{con} is a
    path, URL or connection, either the file extension or the
    \code{format} argument needs to be \dQuote{xmfa}. Compressed files
    (\dQuote{gz}, \dQuote{bz2} and \dQuote{xz}) are handled
    transparently.
  }
  \item{format}{If not missing, should be \dQuote{xmfa}.
  }
  \item{text}{If \code{con} is missing, a character vector to use as the
    input.
  }
}

\value{
  An \code{\link[Biostrings]{AlignedXStringSetList}} object.
}

\details{
  The eXtended Multi-FastA (XMFA) format is a standard for communicating
  genome alignments with rearrangements. It consists of FASTA records
  representing alignments, each with a header indicating the genomic
  position of the alignment and whether there was an inversion
  (alignment to the minus strand). The popular Mauve aligner generates
  XMFA files, with the extra constraint that the alignment spans every
  sequence (see the reference). This function currently only supports
  the Mauve extension.
}

\author{Michael Lawrence}

\references{
  \url{http://darlinglab.org/mauve/user-guide/files.html}
}

\examples{
## import file
aln <- import(system.file("tests", "test.xmfa", package="rtracklayer"))

## access inverted status
Biostrings::inverted(aln[[2L]])

## convert to Chain and liftover a feature from one sequence to another
## this only works for an alignment between two sequences
aln <- phead(aln, 2L)
chain <- as(aln, "Chain")
liftOver(GRanges("ST1:1-10"), chain)
}
